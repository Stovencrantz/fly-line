{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","users","setUsers","username","setUsername","email","setEmail","useEffect","axios","get","then","console","log","data","catch","err","length","map","user","index","name","onSubmit","event","post","alert","onChange","e","target","value","type","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAGgB,SAASA,IAAO,IAAD,EACJC,mBAAS,MADL,mBACvBC,EADuB,KAChBC,EADgB,OAGEF,mBAAS,IAHX,mBAGvBG,EAHuB,KAGbC,EAHa,OAIHJ,mBAAS,IAJN,mBAItBK,EAJsB,KAIfC,EAJe,KAwC9B,OAlCAC,qBAAU,WACTC,IACEC,IAAI,cACJC,MAAK,SAACT,GACFU,QAAQC,IAAI,mBAAoBX,EAAMY,MACtCX,EAASD,EAAMY,SAEnBC,OAAM,SAACC,GAAD,OAASJ,QAAQC,IAAIG,QAC3B,IA2BF,qCACC,0CACW,OAAVd,EACI,qCACCU,QAAQC,IAAI,yBAA0BX,GAC3C,8CAEqB,IAAjBA,EAAMe,OACN,qCACA,kDACCL,QAAQC,IAAI,wBAAyBX,MAG1C,qCACC,iDACMU,QAAQC,IAAI,qBAAsBX,GACxC,6BACEA,EAAMgB,KAAI,SAACC,EAAMC,GAAP,OACV,wCACQD,EAAKE,KADb,aAC6BF,EAAKb,QADzBc,WAQb,uBAAME,SAnDR,SAAoBC,GAEjBX,QAAQC,IAAI,SAAUT,EAAU,QAAS,UAAWE,GACrC,KAAbF,EAIU,KAAVE,EAIJG,IACEe,KAAK,aAAc,CACnBH,KAAMjB,EACNE,MAAOA,IAEPK,MAAK,WACLc,MAAM,mCAGNV,OAAM,WACNU,MAAM,gDAbPA,MAAM,+BAJNA,MAAM,mCA+CN,UACC,uBACCC,SAAU,SAACC,GACJf,QAAQC,IAAI,mBAAoBc,EAAEC,OAAOC,OACzCxB,EAAYsB,EAAEC,OAAOC,QAE5BC,KAAK,OACLC,YAAY,wBAEb,uBACCL,SAAU,SAACC,GACJf,QAAQC,IAAI,gBAAiBc,EAAEC,OAAOC,OACtCtB,EAASoB,EAAEC,OAAOC,QACzBC,KAAK,OACLC,YAAY,6BAEb,uBAAOD,KAAK,iBCtFhB,IAYeE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC1C,EAAD,MAEF2C,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0652f9f9.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios';\n\n export default function App() {\n\tconst [users, setUsers] = useState(null);\n\n\tconst [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  \n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(\"/api/users\")\n\t\t\t.then((users) =>{\n        console.log(\"Users from api: \", users.data)\n        setUsers(users.data)\n      })\n\t\t\t.catch((err) => console.log(err));\n\t}, []);\n\n\tfunction submitForm(event) {\n    // event.preventDefault();\n    console.log(\"Name: \", username, \" --- \", \"Email: \", email)\n\t\tif (username === \"\") {\n\t\t\talert(\"Please fill the username field\");\n\t\t\treturn;\n\t\t}\n\t\tif (email === \"\") {\n\t\t\talert(\"Please fill the email field\");\n\t\t\treturn;\n\t\t}\n\t\taxios\n\t\t\t.post(\"/api/users\", {\n\t\t\t\tname: username,\n\t\t\t\temail: email,\n\t\t\t})\n\t\t\t.then(function () {\n\t\t\t\talert(\"Account created successfully\");\n\t\t\t\t// window.location.reload();\n\t\t\t})\n\t\t\t.catch(function() {\n\t\t\t\talert(\"Could not creat account. Please try again\");\n      });\n\t}\n\treturn (\n\t\t<>\n\t\t\t<h1>Fly-Line</h1>\n\t\t\t{users === null ? (\n        <>\n        {console.log(\"users before loading: \", users)}\n\t\t\t\t<p>Loading...</p>\n        </>\n\t\t\t) : (users.length === 0 ? (\n        <>\n        <p>No user available</p>\n        {console.log(\"users in userlength: \", users)}\n        </>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<h2>Available Users</h2>\n          {console.log(\"users before map: \", users)}\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t{users.map((user, index) => (\n\t\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t\tName: {user.name} - Email: {user.email}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ol>\n\t\t\t\t</>\n\t\t\t))}\n\n\t\t\t<form onSubmit={submitForm}>\n\t\t\t\t<input\n\t\t\t\t\tonChange={(e) => {\n            console.log(\"Username event: \", e.target.value)\n            setUsername(e.target.value)}\n          }\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Enter your username\"\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tonChange={(e) => {\n            console.log(\"Email event: \", e.target.value)\n            setEmail(e.target.value)}}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t/>\n\t\t\t\t<input type=\"submit\" />\n\t\t\t</form>\n\t\t</>\n\t);\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}